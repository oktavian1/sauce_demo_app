name: Deploy and Test

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      deployment-url: ${{ steps.vercel-deploy.outputs.url }}
    
    steps:
      - name: Checkout web app code
        uses: actions/checkout@v3
      
      - name: Deploy to Vercel
        id: vercel-deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

  test:
    needs: deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout automation tests
        uses: actions/checkout@v3
        with:
          repository: oktavian1/automation_sauce_demo
          path: automation
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Install automation dependencies
        working-directory: automation
        run: npm ci
      
      - name: Cache Playwright browsers
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('automation/package-lock.json') }}
      
      - name: Install Playwright system dependencies
        working-directory: automation
        run: npx playwright install-deps
      
      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        working-directory: automation
        run: npx playwright install
      
      - name: Run E2E tests
        working-directory: automation
        run: npm test
        env:
          BASE_URL: ${{ needs.deploy.outputs.deployment-url || secrets.PRODUCTION_URL }}
      
      - name: Generate Allure Report
        if: always()
        working-directory: automation
        run: npm run allure:generate
      
      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: automation/allure-report/
          retention-days: 30
      
      - name: Upload Playwright HTML Report (backup)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: automation/playwright-report/
          retention-days: 30
      
      - name: Upload test videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-videos
          path: automation/test-results/
          retention-days: 30
  
  deploy-report:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
      - name: Download Allure Report
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: public
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'public'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  
  notify:
    needs: [deploy, test, deploy-report]
    runs-on: ubuntu-latest
    if: always() && github.event_name != 'pull_request'
    
    steps:
      - name: Determine workflow status
        id: status
        run: |
          if [ "${{ needs.test.result }}" == "failure" ] || [ "${{ needs.deploy.result }}" == "failure" ]; then
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "color=#dc3545" >> $GITHUB_OUTPUT
            echo "emoji=🔴" >> $GITHUB_OUTPUT
          elif [ "${{ needs.test.result }}" == "success" ] && [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "color=#28a745" >> $GITHUB_OUTPUT
            echo "emoji=✅" >> $GITHUB_OUTPUT
          else
            echo "status=cancelled" >> $GITHUB_OUTPUT
            echo "color=#6c757d" >> $GITHUB_OUTPUT
            echo "emoji=⚠️" >> $GITHUB_OUTPUT
          fi
      
      - name: Send Slack notification
        if: env.SLACK_WEBHOOK_URL != ''
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "text": "${{ steps.status.outputs.emoji }} E2E Test Results: ${{ steps.status.outputs.status }}",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "${{ steps.status.outputs.emoji }} E2E Tests - ${{ steps.status.outputs.status == 'success' && 'Passed' || 'Failed' }}"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repository:*\n<${{ github.event.repository.html_url }}|${{ github.repository }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n`${{ github.ref_name }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit:*\n<${{ github.event.head_commit.url }}|${{ github.event.head_commit.message }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Author:*\n${{ github.event.head_commit.author.name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Deploy:*\n${{ needs.deploy.result }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Tests:*\n${{ needs.test.result }}"
                    }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "📊 <https://oktavian1.github.io/sauce_demo_app/|View Allure Report> | 🔗 <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Workflow Run>"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "Triggered by ${{ github.event_name }} | Run #${{ github.run_number }}"
                    }
                  ]
                }
              ],
              "attachments": [
                {
                  "color": "${{ steps.status.outputs.color }}",
                  "fields": [
                    {
                      "title": "Status",
                      "value": "${{ steps.status.outputs.status }}",
                      "short": true
                    },
                    {
                      "title": "Environment",
                      "value": "Production",
                      "short": true
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
